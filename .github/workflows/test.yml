name: Test
on:
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".github/workflows/commitlint.yml"
      - ".husky/"
      - "commitlint.config.cjs"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".github/workflows/commitlint.yml"
      - ".husky/"
      - "commitlint.config.cjs"

jobs:
  cache-pnpm:
    name: Cache Pnpm on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
  build:
    name: Build and run unit tests on ${{ matrix.os }} with Node ${{ matrix.node }}
    needs: cache-pnpm
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [12, 14, 16]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node: ${{ matrix.node }}
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
      - run: pnpm build
      - run: pnpm run lint
      - run: pnpm test
  integration-test-ubuntu:
    needs: build
    name: Integration test on ${{ matrix.os }} with Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12, 14, 16]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node: ${{ matrix.node }}
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
      - run: pnpm run build
      - run: pnpm run coverage:integration
      - uses: codecov/codecov-action@v1
  integration-test-macos:
    needs: build
    name: Integration test on ${{ matrix.os }} with Node ${{ matrix.node }}
    runs-on: macos-latest
    strategy:
      matrix:
        node: [14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node: ${{ matrix.node }}
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
      - run: pnpm run build
      - run: pnpm run coverage:integration
      - uses: codecov/codecov-action@v1
  integration-test-windows:
    needs: build
    name: Integration test on ${{ matrix.os }} with Node ${{ matrix.node }}
    runs-on: windows-latest
    strategy:
      matrix:
        node: [14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node: ${{ matrix.node }}
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
      - run: pnpm run build
      # NOTE: Cannot run with nyc in Windows.
      - run: pnpm run test:integration
  trigger-release:
    name: Trigger release workflow
    runs-on: ubuntu-latest
    needs:
      - integration-test-ubuntu
      - integration-test-macos
      - integration-test-windows
    if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/master' }}
    steps:
      - uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Release
          token: ${{ secrets.PAT_WORKFLOW }}
